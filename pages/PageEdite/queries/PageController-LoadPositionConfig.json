{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "LoadPositionConfig",
    "fullyQualifiedName": "PageController.LoadPositionConfig",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "invalids": [
        "No datasource configuration found. Please configure it and try again."
      ],
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "PageEdite",
    "collectionId": "PageEdite_PageController",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "async function (division, position) {\n  if (position === \"\") {\n    await storeValue(\"hardwareConfig\", \"\", true);\n    await storeValue(\"softwareConfig\", \"\", true);\n    await storeValue(\"licenseConfig\", \"\", true);\n    console.log(`positionNotFound: config clear!`);\n    return;\n  }\n  await APIGetConfig.run();\n  let configList = APIGetConfig.data.filter(version => {\n    return version.version == 1;\n  })[0];\n  storeValue(\"currentConfigState\", configList, true);\n  console.log(configList);\n  let selectedPositionIndex = configList.authorizeMatrix.findIndex(item => {\n    return item.Division == division && item.Position == position;\n  });\n  await storeValue(\"currentPositionIndex\", selectedPositionIndex, true);\n  let selectedPositionConfig = configList.authorizeMatrix[selectedPositionIndex];\n  let hardwareConfig = selectedPositionConfig.Hardware;\n  let softwareConfig = selectedPositionConfig.Software;\n  let licenseConfig = selectedPositionConfig.License;\n  storeValue(\"hardwareConfig\", hardwareConfig, true);\n  storeValue(\"softwareConfig\", softwareConfig, true);\n  storeValue(\"licenseConfig\", licenseConfig, true);\n}",
      "jsArguments": [
        {},
        {}
      ],
      "isAsync": true
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "PageEdite_PageController.LoadPositionConfig",
  "deleted": false,
  "gitSyncId": "63282add93ead37f152bc2ca_63282ade93ead37f152bc34a"
}